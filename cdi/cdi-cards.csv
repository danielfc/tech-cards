"Compared with EJBs, CDI features a different, more flexible kind of bean. One of the most important differences between the two approaches is that CDI Beans are ___________ that is, they live in a well-defined scope.","contextual"
"
Scope for request:

@___________
@Named
public class Customer {","RequestScoped"
"_____ beans allow us to easily inject our beans into other classes that depend on them, and to easily refer to them from JSF pages via the Unified Expression Language(EL).","Named"
"The _____________ beans are shared for the length of a single request.This could be an HTTP request, a remote EJB invocation, a web services invocation, or messagedelivery to an MDB. These beans are destroyed at the end of the request.","@RequestScoped"
"The ______________ beans are shared across multiple requests in the same HTTP session but only if there is an active conversation maintained.","@ConversationScoped"
"The ____________ beans are shared between all requests that occur in the same HTTP session and are destroyed when the session is destroyed.","@SessionScoped"
"An _____________ bean will live for as long as the application is running and is destroyed when the application is shut down.","@ApplicationScoped"
"The ___________ beans are never shared between injection points. Any injection of a dependent bean is a new instance whose lifecycle is bound to the lifecycle of the object it is being injected into.","@Dependent"
"In order to enable CDI, the file _________ must be placed:


In your WEB-INF folder if you are developing a web application
In your META-INF folder if you are deploying a JAR archive","beans.xml"
"Y/N - You can use both annotations to inject EJBs:


@Inject
@EJB","Y"
"@_____ annotation, which is an alias for two commonly used annotations: @Named and @RequestScoped.","Model"
"_________ methods allow control over the production of the dependency objects. As a Java ________ pattern, they can be used as a source of objects whose implementation may vary at runtime, or if the object requires some custom initialization that is not to be performed in the constructor. It can be used to provide any kind of concrete class","Producer,Factory"
"@_____________, just like the name suggests, can be used to observe objects. An observer method is notified whenever an object is created, removed, or updated.","Observes"
"public void <b>onMemberListChanged</b>(@________(notifyObserver = Reception.IF_EXISTS) final Seat member) {
      retrieveAllSeatsOrderedByName();
}","Observes"
"A conditional Observer which is denoted by the expression <b>notifyObserver = Reception._______</b>, means that in practice the observer method is only called if an instance of the component already exists,","IF_EXISTS"
"Reception.________ is the default observer for notifyAttribute. If an instance doesn't exist, it will be created.","ALWAYS"
"@Inject _____<Seat> seatEvent;","Event"
"seatEvent._____(seat);","fire"
"Y/N - You can declare JSF Managed Beans via an annotation and the scopes are expanded with a view scope and the ability to create custom scopes. However, apart from the view scope, there is very little still going for JSF Managed Beans, which can be replaced by CDI Beans that are much more flexible and allow a better integration with other Java EE components.","Y"
"Y/N - EJBs, even using a less flexible injection mechanism, still maintain some unique features such as schedulable timers, asynchronous operations, declarative transactional execution, and pooling, that are essential for throttling and the prevention of denial of service attacks.","Y"
"A way to properly clean up the EntityManagers at the end of each request by using the annotation @_________.","Disposes"
"For implementing interception in CDI, we need to provide two parts. The first one is obviously the annotation itself. It is meta-annotated as @_________________ which marks it as an annotation that is intended to be used for interceptors","InterceptorBinding"
"The second part is the interceptor implementation itself. This class must be annotated as @__________ and additionally with its intended interceptor binding. The interceptor functionality itself is implemented in a method which gets annotated as @_______________","Interceptor,AroundInvoke"
