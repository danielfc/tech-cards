"What are the components in the EJB spec?","SB, MDB"
"What are the types of Session Beans?","Stateful, Stateless, Singleton"
"When do you use the annotation @Local?","In a separated interface or class"
"When do you use the annotation @LocalBean?","No interface"
"These beans do not declare any instance (class-level) variables, so that the methods contained within can act only on any local parameters. There is no way to maintain state across method calls","Stateless"
"These beans can hold client state across method invocations. This is possible with the use of instance variables declared in the class definition. The client will then set the values for these variables and use these values in other method calls.","Stateful"
"What's the main difference between MDB and SB and EB?","Asynchronously"
"Retain no data or conversational state for a specific client","MDB"
"It allows Java EE applications to process messages asynchronously. This type of bean normally acts as a JMS message listener, which is similar to an event listener but receives JMS messages instead of events.","MDB"
"Which JavaBeans use only the phases Create (@PostConstruct), Remove (@PreDestroy) in its Life Cycle?","Stateless"
"Which JavaBeans use the phases Create (@PostConstruct), OnMessage and Remove (@PreDestroy) in its Life Cycle?","Message"
"Which JavaBeans use the phases Create (@PostConstruct), Passivate and Remove (@PreDestroy) in its Life Cycle?","Stateful"
"Multiple instances inside the Pool. Each time a client calls a method, a new instance is picked up.","Stateless"
"One instance per client until the time expires or a method annotated with @Remove is called.","Stateful"
"Multiple clients call the methods from one single instance","Singleton"
"Is accessible only by web components(JSF, JSP, Servlets) inside the server or another JavaBeans.","Local"
"Is accessible even by java desktop application.","Remote"
"Y/N - Is that possible to use an annotation like @RemoteBean and do not provide any interface for remote beans?","N"
"Annotation to instantiate a Singleton when the application is started up.","@Startup"
"Which JavaBeans requires a Home Interface?","SB, EB"
"Only one processor can access a memory location at a given time.","Exclusive Read Exclusive Write"
"Any number of processors can read but only one processor can write to a location at a time.","Concurrent Read Exclusive Write"
"Any number of processors can access and modify any data location.","Concurrent Read Concurrent Write"
"What is the safest concurrent access model?","EREW"
"What is the fastest concurrent access model?","CRCW"
"Which is the only Session Bean that needs to deal with concurrency?","Singleton"
"Essentially, with a ________ annotation the caller holds an exclusive lock on the bean for the duration of the method call and all other threads for that or any other method must wait.","@Lock(WRITE)"
"The ________ annotation allows full concurrent access to the methods (assuming no write locks are held)","@Lock(READ)"
"Which lock annotation is the default in Singleton Beans?","WRITE"
"What are the 2 values for the @ConcurrencyManagement annotation?","BEAN, CONTAINER"
"What are the 3 ways of Maximizing Parallel Efficiency","Find the parallelism, Load balancing, Minimize communication overhead"
"Associated with a single client session","SB"
"State is managed by the EJB container","SB"
"It maintains a conversational state","Stateful"
"Associated with a data set, not a session","EB"
"Y/N - Entity beans are best if your bean needs to exist for a single session","N"
"Y/N - Session beans are best if your bean needs to exist for a single session","Y"
"Y/N - Entity beans are best if your are operating on persistent data","Y"
"Which topic the following annotations cover? @DeclareRoles, @PermitAll, @DenyAll, @RolesAllowed","Security"
"Which annotation allow a method to run asynchronous?","@Asynchronous"
"When not void, a method assigned with the @Asynchronous annotation must return which object?","Future"
"Which object mest be ruturned when using Future?","AsyncResult"
"Y/N - The JbossAS supports JDK 8.","N"
"Ideal clients - Other Session Beans, all JSF managed beans, servlets, REST Endpoints.","Stateless, Singleton"
"Ideal clients - Other Stateful Beans and JSF Session bean.","Stateful"
"Ideal clients - No clients.","MDB"
"Which annotation injects the EntityManager in a JavaBeans?","@PersistenceContext"
"ACID","Atomicity, Consistency, Isolation, Durability"
"The default transaction API in Java EE server","JTA"
"What are the two types of transactions?","Resource local, JTA"
"Which transaction type is used only in Java desktop apps?","Resource local"
"Which interface should you inject using @Resource to manage the transaction as BEAN type?","UserTransaction"
"What are the 2 values for the @TransactionManagement annotation?","BEAN, CONTAINER"
"Y/N - @TransactionAttribute(REQUIRED) - Client in a Transaction -> EJB uses that transaction","Y"
"Y/N - @TransactionAttribute(REQUIRED) - Client without a Transaction -> EJB creates a new transaction","Y"
"Y/N - @TransactionAttribute(REQUIRES_NEW) - Client in a Transaction -> EJB uses that transaction","N"
"Y/N - @TransactionAttribute(REQUIRES_NEW) - Client in a Transaction -> EJB creates a new transaction","Y"
"Y/N - @TransactionAttribute(REQUIRES_NEW) - Client without a Transaction -> EJB creates a new transaction","Y"
"Y/N - @TransactionAttribute(MANDATORY) - Client in a Transaction -> EJB creates a new transaction","N"
"Y/N - @TransactionAttribute(MANDATORY) - Client in a Transaction -> EJB uses that transaction","Y"
"Y/N - @TransactionAttribute(MANDATORY) - Client without a Transaction -> EJB throws a exception","Y"
"Y/N - @TransactionAttribute(NEVER) - Client in a Transaction -> EJB throws a exception","Y"
"Y/N - @TransactionAttribute(NEVER) - Client without a Transaction -> EJB throws a exception","N"
"Y/N - @TransactionAttribute(NEVER) - Client without a Transaction -> EJB without a transaction","Y"
"Y/N - @TransactionAttribute(SUPPORTS) - Client in a Transaction -> EJB uses that transaction","Y"
"Y/N - @TransactionAttribute(SUPPORTS) - Client without a Transaction -> EJB without a transaction","Y"
"Y/N - @TransactionAttribute(NOT_SUPPORTED) - Client in a Transaction -> EJB uses that transaction","N"
"Y/N - @TransactionAttribute(NOT_SUPPORTED) - Client in a Transaction -> EJB without a transaction","Y"
"Y/N - @TransactionAttribute(NOT_SUPPORTED) - Client without a Transaction -> EJB without a transaction","Y"
